#+TITLE: ET's .org to .html pipeline
#+AUTHOR: Ewan Townshend
#+OPTIONS: ^:nil toc:3 num:nil

* tl;dr
This package generates pretty, readable, responsive websites from org files and emacs themes. You can optionally specify a header, footer, and additional CSS and JS to be included. To see the default output, for my chosen themes and with no header, footer or extras, read this README in your browser [[https://etown.dev/et-org-html/][here]]. If you're already there, you can find the GitHub repo [[https://github.com/ewantown/et-org-html][here]].

# To see an example with custom header and footer, you can view my personal site [[https://www.etown.dev][here]]. 

* About this package
 The leading file - et-org-html.el - defines an emacs pipeline for [[https://orgmode.org/manual/Exporting.html][exporting]] Org files, or [[https://www.gnu.org/software/emacs/manual/html_node/org/Publishing.html][publishing]] Org projects, to HTML. The HTML generated by this pipeline is optimized for readability and responsiveness, is enriched, compared to the Org Mode defaults, and the pipeline enables easy customization by users. This is achieved by:

1. Extracting colors from user-specified emacs themes, inserting these in a CSS template (et-org-to-html.css), and injecting the result into a ~<style>~ element. 
2. Inserting toggle-buttons for light- and dark-mode, and table-of-content view, governed by included scripts (et-org-html.js).
3. Extending the default org-to-html export backend to include copy-to-clipboard buttons for source blocks annotated with ~#+ATTR_HTML: :copy-button t~
4. Injecting optional, user-defined HTML header and footer, and CSS styling and JS scripts, for a customized look-and-feel.   


* How to use it
+ Download the package source files and add them to your emacs load path.
+ Add something like this use-package snippet to your configuration file:
#+ATTR_HTML: :copy-button t
#+begin_src emacs-lisp
  (use-package et-org-html
    :ensure nil ; get from load path
    :hook (org-mode . et-org-html-mode)
    :config    
    (setq et-org-html-theme-alist
          '((light . solo-jazz)
            (dark  . tomorrow-night-eighties)))    
    ;; package default:
    ;; '((light . leuven) (dark . tango-dark))

    (setq et-org-html-default-mode 'light)
    ;; package default: 'dark

    (setq et-org-html-header      ; optional
          "/your/own/header.html")

    (setq et-org-html-footer      ; optional
          "/your/own/footer.html")

    (setq et-org-html-extra-css   ; optional
          "/your/own/style.css")

    (setq et-org-html-extra-js    ; optional
          "/your/own/script.js"))
#+end_src
+ After evaluating this, when you open a .org file, et-org-html-mode will activate.

+ When et-org-html-mode is active and org-export is invoked with either the ~'html~ or ~'et-html~ backends, this package will inject default formatting and styling with colors drawn from your specified emacs themes, and your header, footer, and additional CSS and scripts (if specified).

+ Note: in order for a code block to be copyable, the .org source must contain the ~#+ATTR_HTML: :copy-button t~ tag, and the export backend must be ~'et-html~. The latter can be achieved by invoking ~M-x et-org-html-export-to-html~ to create a file in the current directory, or ~M-x et-org-html-export-to-html-file~ to interactively specify the filepath.

+ Finally, to use this package for /publishing/ Org projects, in specifying the value of ~org-publish-project-alist~, for a given project, specify ~:publishing-function et-org-html-publish-to-html~. 

* Things to keep in mind
+ The HTML specified by ~et-org-html-header~ and ~et-org-html-footer~ will inherit the default styling, unless further styling for these is defined in the file specified by ~et-org-html-extra-css~.
  + For easy customization, the contents of a user-specified HTML file are wrapped together in a ~<div>~ element; with id = 'injected-header' and id = 'injected-footer', respectively, and both with class = 'injected'.
+ The CSS specified by ~et-org-html-extra-css~ is appended to the /end/ of the default styling found in et-org-html.css.
  + This user-specified CSS may also use the template variables defined in et-org-html.css, which ultimately refer to emacs theme face attributes.
  + This user-specified CSS may override the default styling.

* Credits
+ Shi Tianshu's [[https://github.com/DogLooksGood/org-html-themify?tab=readme-ov-file][org-html-themify]] provided the basic model / template for CSS interpolation.
+ Various stackoverflow posts were of great help, but alas, I've lost the links.
