#+TITLE: ET's .org to .html pipeline
#+AUTHOR: Ewan Townshend
#+OPTIONS: ^:nil toc:3 num:nil

* About this package
The leading file - et-org-html.el - defines an emacs pipeline for [[https://orgmode.org/manual/Exporting.html][exporting]] Org files, or [[https://www.gnu.org/software/emacs/manual/html_node/org/Publishing.html][publishing]] Org projects, to HTML. The HTML generated by this pipeline is enriched, compared to the Org Mode HTML export defaults, and the pipeline enables easy customization by users. This is achieved by:

1. Extending the default org-to-html export backend to include 'copy' links for source blocks annotated with ~#+ATTR_HTML: :copy-button t~
2. Inserting a table-of-content view toggle, and a light/dark mode toggle, governed by included scripts (et-org-html.js).  
2. Extracting colors from user-specified emacs themes, inserting these in a CSS template (et-org-to-html.css), and injecting the result into a ~<style>~ element.
3. Inserting optional, user-defined html headers, footers, and additional CSS styling, for a customized page look-and-feel.

To see the default output, for my chosen themes and with no header or footer, you can read this README in HTML format [[https://etown.dev/et-org-html/][here]]. 
* How to use this package
+ Download this package and add it to your emacs load path.
+ Add something like this use-package snippet to you configuration file:
#+ATTR_HTML: :copy-button t
#+begin_src emacs-lisp
      (use-package et-org-html
        :ensure nil ; get from load path
        :hook (org-mode . et-org-html-mode)
        :config
        (setq et-org-html-theme-alist    ; mandatory
              '((light . solo-jazz)
                (dark  . tomorrow-night-eighties)))

        (setq et-org-html-header-path    ; optional
              "/your/own/path/header.html")
  
        (setq et-org-html-footer-path    ; optional
              "/your/own/path/footer.html")

        (setq et-org-html-extra-css-path ; optional
              "/your/own/path/style.css"))))
#+end_src
+ After executing this, when you open a .org file, et-org-html-mode will activate.

+ With et-org-html-mode active, when org-export is triggered with either the ~'html~ or ~'et-html~ backends, this package will process the outputs, injecting default formatting and styling, as well as your specified header, footer, and additional CSS (if specified).

+ Note: in order for a code block to be copyable, the .org source must contain the ~#+ATTR_HTML: :copy-button t~ tag, and the export backend must be ~'et-html~. The latter can be achieved by invoking ~M-x et-org-html-export-to-html~, to create a file in the current directory, or ~M-x et-org-html-export-to-html-file~ to interactively specify the filepath.

+ Finally, to use this package for /publishing/ Org projects, in specifying the value of ~org-publish-project-alist~, for a given project, specify ~:publishing-function et-org-html-publish-to-html~. 

* Things to keep in mind
+ The HTML specified by ~et-org-html-header-path~ and ~et-org-html-footer-path~ will inherit the default styling, unless further styling for these is defined in the file specified by ~et-org-html-extra-css-path~.
  + For ease of customizing header/footer styling, everything contained in the user-specified HTML files  will be wrapped in ~<div>~ elements, with id = 'injected-head' and id = 'injected-foot', and both with class = 'injected'. 
+ The CSS specified by ~et-org-html-extra-css-path~ is appended to the /end/ of the default styling, found in et-org-html.css.
  + This user-specified CSS may also use the template variables, referring to emacs theme face attributes, defined in et-org-html.css.
  + This CSS may override the default styling.
