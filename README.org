#+TITLE: ET's .org to .html pipeline
#+AUTHOR: Ewan Townshend
#+OPTIONS: ^:nil toc:3 num:nil

* About this package
The leading file (et-org-html.el) contains emacs-lisp source defining a pipeline for [[https://orgmode.org/manual/Exporting.html][exporting]] .org files, or [[https://www.gnu.org/software/emacs/manual/html_node/org/Publishing.html][publishing]] .org projects, to HTML. The HTML generated by this pipeline is enriched, relative to the Org Mode defaults, and enables easy customization by users. This is achieved by:

1. Extending the default org-to-html export backend to include 'copy' links for source blocks annotated with ~#+ATTR_HTML: :copy-button t~
2. Inserting a table-of-content view toggle, and a light/dark mode toggle, governed by included scripts (et-org-html.js).  
2. Extracting colors from user-specified themes, interpolating these values in a CSS template (et-org-to-html.css), and injecting the result into a ~<style>~ element.
3. Inserting optional, user-defined html headers, footers, and additional CSS styling, for a customized page look-and-feel.

To see the default output - for my chosen themes, and with no header or footer - rendered in your browser, you can read this README in HTML format [[https://etown.dev/et-org-html/][here]]. 
* How to use this package:
You first must download this package and add it to your emacs load path. Then, this use-package snippet will get you started:
#+ATTR_HTML: :copy-button t
#+begin_src emacs-lisp
  (use-package et-org-html
    :ensure nil ; get from load path
    :hook (org-mode . et-org-html-mode)
    :config
    (setq et-org-html-theme-alist
          '((dark . tomorrow-night-eighties) (light . solo-jazz)))

    (setq et-org-html-header-path
          "/pick/your/own/path/header.html")
  
    (setq et-org-html-footer-path
          "/pick/your/own/path/footer.html")

    (setq et-org-html-extra-css-path
          "/pick/your/own/path/style.css"))))
#+end_src
After executing this, when you open an org file, et-org-html-mode will activate. Then, when org-export is triggered with either the ~'html~ or ~'et-html~ backends, et-org-html will process the outputs, injecting default formatting and styling, as well as your headers, footers, and additional CSS (if any are specified).

Note: in order for a code block to be copyable, the .org source file must contain the ~#+ATTR_HTML: :copy-button t~ tag, and the export backend must be ~'et-html~. The latter can be achieved by invoking ~M-x et-org-html-export-to-html~, to create a file in the current directory, or ~M-x et-org-html-export-to-html-file~ to interactively specify the filepath.

Finally, to use this package for /publishing/ Org projects, in specifying the value of ~org-publish-project-alist~, for a given project, specify ~:publishing-function et-org-html-publish-to-html~. 
